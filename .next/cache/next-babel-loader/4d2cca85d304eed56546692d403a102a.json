{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport Error from \"next/error\";\n/*built in error page*/\n\nimport Link from \"next/link\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport { useEffect } from 'react';\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\n/*\n *LOGIC:\n * make api fetch to hacker news api\n * map over and display stories\n */\n\nconst useStyles = makeStyles({\n  footer: {\n    padding: '1em',\n    '& a': {\n      fontWeight: 'bold',\n      color: 'black',\n      textDecoration: 'none'\n    }\n  }\n});\n\nconst Index = props => {\n  const {\n    stories,\n    page\n  } = props;\n  const classes = useStyles();\n  useEffect(() => {\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.register(\"/service-worker.js\").then(registration => {\n        console.log(\"service worker registration successful\", registration);\n      }).catch(err => {\n        console.warn(\"service worker registration failed\", err.message);\n      });\n    }\n  }, []);\n  /*display error page*/\n\n  if (stories.length === 0) {\n    return __jsx(Error, {\n      statusCode: 503\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made with Next.js\"\n  }, __jsx(StoryList, {\n    stories: stories\n  }), __jsx(\"footer\", {\n    className: classes.footer\n  }, __jsx(Link, {\n    href: `/?page=${page + 1}`\n  }, __jsx(\"a\", null, \"Next Page (\", page + 1, \")\"))));\n};\n/*\n life cycle: get data from each page\n */\n\n\nIndex.getInitialProps = async function ({\n  req,\n  res,\n  query\n}) {\n  let stories;\n  let page;\n  /*hold query param page value*/\n\n  /*handle errors*/\n\n  try {\n    page = Number(query.page) || 1;\n    /*get the Number of the query param*/\n\n    const response = await fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`);\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n\n  return {\n    page,\n    stories\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/[FreeCourseSite.com] Udemy - Universal React with Next.js - The Ultimate Guide/3. Project 2 - Hacker News Progressive Web App/final-code-hacker-next/pages/index.js"],"names":["fetch","Error","Link","StoryList","Layout","useEffect","makeStyles","MuiThemeProvider","useStyles","footer","padding","fontWeight","color","textDecoration","Index","props","stories","page","classes","navigator","serviceWorker","register","then","registration","console","log","catch","err","warn","message","length","getInitialProps","req","res","query","Number","response","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAAkC;;AAClC,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AAEA,SAAQC,UAAR,EAAoBC,gBAApB,QAA2C,0BAA3C;AAEA;;;;;;AAMA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,KADL;AAEJ,WAAM;AACFC,MAAAA,UAAU,EAAE,MADV;AAEFC,MAAAA,KAAK,EAAE,OAFL;AAGFC,MAAAA,cAAc,EAAE;AAHd;AAFF;AADiB,CAAD,CAA5B;;AAYA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AACA,QAAMG,OAAO,GAAGV,SAAS,EAAzB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,mBAAmBc,SAAvB,EAAkC;AAC9BA,MAAAA,SAAS,CAACC,aAAV,CACKC,QADL,CACc,oBADd,EAEKC,IAFL,CAEUC,YAAY,IAAI;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,YAAtD;AACH,OAJL,EAKKG,KALL,CAKWC,GAAG,IAAI;AACVH,QAAAA,OAAO,CAACI,IAAR,CAAa,oCAAb,EAAmDD,GAAG,CAACE,OAAvD;AACH,OAPL;AAQH;AACJ,GAXQ,EAWN,EAXM,CAAT;AAcA;;AACA,MAAIb,OAAO,CAACc,MAAR,KAAmB,CAAvB,EAA0B;AACtB,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE;AAAnB,MAAP;AACH;;AAGH,SAGI,MAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,WAAW,EAAC;AAFhB,KAKI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEd;AAApB,IALJ,EAOI;AAAQ,IAAA,SAAS,EAAEE,OAAO,CAACT;AAA3B,KAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASQ,IAAI,GAAG,CAAE;AAA/B,KACI,gCAAeA,IAAI,GAAG,CAAtB,MADJ,CAFJ,CAPJ,CAHJ;AAmBD,CA3CD;AA6CA;;;;;AAGAH,KAAK,CAACiB,eAAN,GAAwB,gBAAe;AAACC,EAAAA,GAAD;AAAMC,EAAAA,GAAN;AAAWC,EAAAA;AAAX,CAAf,EAAkC;AACtD,MAAIlB,OAAJ;AACA,MAAIC,IAAJ;AAAU;;AAEV;;AACA,MAAI;AACAA,IAAAA,IAAI,GAAGkB,MAAM,CAACD,KAAK,CAACjB,IAAP,CAAN,IAAsB,CAA7B;AAAgC;;AAChC,UAAMmB,QAAQ,GAAG,MAAMpC,KAAK,CAAE,8CAA6CiB,IAAK,EAApD,CAA5B;AACAD,IAAAA,OAAO,GAAG,MAAMoB,QAAQ,CAACC,IAAT,EAAhB;AACH,GAJD,CAIE,OAAOV,GAAP,EAAY;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAX,IAAAA,OAAO,GAAG,EAAV;AACH;;AAED,SAAO;AAAEC,IAAAA,IAAF;AAAQD,IAAAA;AAAR,GAAP;AACH,CAfD;;AAgBA,eAAeF,KAAf","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport Error from \"next/error\";   /*built in error page*/\nimport Link from \"next/link\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport {useEffect} from 'react';\n\nimport {makeStyles, MuiThemeProvider} from '@material-ui/core/styles';\n\n/*\n *LOGIC:\n * make api fetch to hacker news api\n * map over and display stories\n */\n\nconst useStyles = makeStyles({\n    footer: {\n        padding: '1em',\n        '& a':{\n            fontWeight: 'bold',\n            color: 'black',\n            textDecoration: 'none',\n        }\n    },\n\n});\n\nconst Index = (props) => {\n    const { stories, page } = props;\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (\"serviceWorker\" in navigator) {\n            navigator.serviceWorker\n                .register(\"/service-worker.js\")\n                .then(registration => {\n                    console.log(\"service worker registration successful\", registration);\n                })\n                .catch(err => {\n                    console.warn(\"service worker registration failed\", err.message);\n                });\n        }\n    }, []);\n\n\n    /*display error page*/\n    if (stories.length === 0) {\n        return <Error statusCode={503} />;\n    }\n\n\n  return (\n\n\n      <Layout\n          title=\"Hacker Next\"\n          description=\"A Hacker News clone made with Next.js\"\n      >\n          {/*pass stories as props*/}\n          <StoryList stories={stories} />\n\n          <footer className={classes.footer}>\n              {/*incriment the page count so we can read it in getInitialProps*/}\n              <Link href={`/?page=${page + 1}`}>\n                  <a>Next Page ({page + 1})</a>\n              </Link>\n          </footer>\n\n      </Layout>\n  );\n};\n\n/*\n life cycle: get data from each page\n */\nIndex.getInitialProps = async function({req, res, query}) {\n    let stories;\n    let page; /*hold query param page value*/\n\n    /*handle errors*/\n    try {\n        page = Number(query.page) || 1; /*get the Number of the query param*/\n        const response = await fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`);\n        stories = await response.json();\n    } catch (err) {\n        console.log(err);\n        stories = [];\n    }\n\n    return { page, stories };\n}\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}