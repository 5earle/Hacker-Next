{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-fetch\";\nimport Error from \"next/error\";\n/*built in error page*/\n\nimport Link from \"next/link\";\nimport StoryList from \"../components/StoryList\";\nimport Layout from \"../components/Layout\";\nimport { useEffect } from 'react';\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\n/*\n *LOGIC:\n * make api fetch to hacker news api\n * map over and display storyList Component\n * change api end pint when page reload\n */\n\nconst useStyles = makeStyles({\n  footer: {\n    padding: '1em',\n    '& a': {\n      fontWeight: 'bold',\n      color: 'black',\n      textDecoration: 'none'\n    }\n  }\n});\n\nconst Index = props => {\n  const {\n    stories,\n    page\n  } = props;\n  const classes = useStyles();\n  useEffect(() => {\n    if (\"serviceWorker\" in navigator) {\n      navigator.serviceWorker.register(\"/service-worker.js\").then(registration => {\n        console.log(\"service worker registration successful\", registration);\n      }).catch(err => {\n        console.warn(\"service worker registration failed\", err.message);\n      });\n    }\n  }, []);\n  /*display error page*/\n\n  if (stories.length === 0) {\n    return __jsx(Error, {\n      statusCode: 503\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Hacker Next\",\n    description: \"A Hacker News clone made with Next.js\"\n  }, __jsx(StoryList, {\n    stories: stories\n  }), __jsx(\"footer\", {\n    className: classes.footer\n  }, __jsx(Link, {\n    href: `/?page=${page + 1}`\n  }, __jsx(\"a\", null, \"Next Page (\", page + 1, \")\"))));\n};\n/*\n life cycle: will provide a context object abut the route\n destruct the context for {req, res, query}\n */\n\n\nIndex.getInitialProps = async function ({\n  req,\n  res,\n  query\n}) {\n  let stories;\n  let page;\n  /*hold query param page value*/\n\n  /*handle errors*/\n\n  try {\n    page = Number(query.page) || 1;\n    /*get the Number of the query param*/\n\n    const response = await fetch(`https://node-hnapi.herokuapp.com/news?page=${page}`);\n    stories = await response.json();\n  } catch (err) {\n    console.log(err);\n    stories = [];\n  }\n\n  return {\n    page,\n    stories\n  };\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}